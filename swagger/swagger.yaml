swagger: '2.0'
info:
  title: Form Public Routes
  description: Apis for FormService Public EndPoints
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
host: localhost:5002
basePath: /form/api
schemes:
  - http
paths:
  /health:
    get:
      summary: check health of server
      responses:
        200:
          description: OK
  /myforms:
    get:
      summary: Returns The array of forms created by user whose api key is mentioned
      parameters:
        - $ref: '#/parameters/access_token'
        - in: query
          name: key
          required: false
          type: string
          description: mention your api_key
      description: >-
         So this Api Simply Returns The array of forms created by user whose api key is mentioned 
      produces:
        - application/json
      responses:
        200:
          description: OK
        401:
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token not recognized
        default:
          description: Unexpected error 
  /forms/delete:
    delete:
      summary: Delete the form-template as well as form-responses by id
      parameters:
        - $ref: '#/parameters/access_token'
        - in: query
          name: key
          required: false
          type: string
          description: mention your api_key
        - in: body
          name: formId
          required: true
          schema:
            type: object
            properties:
              formId:
                type: integer
          description: mention your form_id 
      description: >-
         So this Api Delete the form-template as well as form-responses by id 
      produces:
        - application/json
      responses:
        200:
          description: Deleted
          schema:
            type: object
            properties: 
              status: 
                type: string
                example: Deleted
        401:
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token not recognized
        404:
          description: form-template not found      
        default:
          description: Unexpected error          
  /get/responses/{formId}:
    get:
      summary: Get all the responses of form by formId
      parameters:
        - in: query
          name: key
          required: false
          type: string
          description: mention your api_key
        - in: path
          name: formId
          required: true
          type: integer
          description: mention your form_id 
      description: >-
         So this Api Get all the responses of form by formId 
      produces:
        - application/json
      responses:
        200:
          description: OK
        401:
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token not recognized
        404:
          description: form with given formId not found 
          schema:
            type: object
            properties:
              Status:
                type: string
                example: Not Found Error
        500:
          description: Internal Server Error      
        default:
          description: Unexpected error
  /oauth/createSheets:
    post:
      summary: "Create Google SpreadSheet by giving ClientID, ClientSecret, RedirectURL and Refresh-token"
      parameters:
        - $ref: '#/parameters/access_token'
        - in: body
          name: body
          schema: 
            $ref: '#/definitions/googleOauthClient'
          required: true
        - in: query
          name: key
          required: false
          type: string
          description: mention your api_key
      description: >-
         This Api will create new Google SpreadSheet with your Google account credentials 
      produces:
        -  application/json
      responses:
        200:
          description: OK
        401: 
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token is not recognized
        404:
          description: Credentials with ClientID, ClientSecret, redirectUrl and Token not found
          schema:
            type: object
            properties:
              Status:
                type: string
                example: Not Found Error
        500:
          description: Internal Server Error
        default:
          description: Unexpected error
  /delete/response:
    delete:
      summary: Delete response of a form created by current user
      parameters:
        - $ref: '#/parameters/access_token'
        - in: body
          name: body
          schema: 
            $ref: '#/definitions/deleteResponse'
          required: true
      description: >-
         So this API will delete the response from given form
      produces:
        - application/json
      responses:
        200:
          description: OK
        401:
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token not recognized
        404:
          description: form with given formId not found 
          schema:
            type: object
            properties:
              Status:
                type: string
                example: Not Found Error
        500:
          description: Internal Server Error      
        default:
          description: Unexpected error
  /get/response/{responseId}:
    get:
      summary: Get particular response by giving responseId
      parameters:
        - in: query
          name: key
          required: false
          type: string
          description: mention your api_key
        - in: path
          name: responseId
          required: true
          type: string
          description: mention responseId 
      description: >-
         So this Api Get particular response by giving responseId 
      produces:
        - application/json
      responses:
        200:
          description: OK
        401:
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token not recognized
        404:
          description: response with given responseid not found
          schema:
            type: object
            properties:
              Status:
                type: string
                example: Not Found Error
        500:
          description: Internal Server Error      
        default:
          description: Unexpected error
  /get/consumers:
    get:
      summary: get all the consumers attached to the form
      parameters:
        - $ref: '#/parameters/access_token'
        - in: query
          name: formId
          required: true
          type: string
          description: mention responseId 
      responses:
        200:
          description: OK    
        404:
          description: Not Found
  /get/all/consumers:
    get:
      summary: get all the consumers
      parameters: 
        - in: query
          name: tags
          required: false
          type: string
          description: mention tags separated with comma
      responses:
        200:
          description: OK    
        404:
          description: Not Found        
  /update/consumers:
    put:
      summary: add the consumers attached to the form
      parameters:
        - $ref: '#/parameters/access_token'
        - $ref: '#/parameters/consumer_queue_body'
      responses:
        200:
          description: OK    
        404:
          description: Not Found  
  /remove/consumers:
    delete:
      summary: remove the consumers attached to the form
      parameters:
        - $ref: '#/parameters/access_token'
        - $ref: '#/parameters/consumer_queue_body'
      responses:
        200:
          description: OK    
        404:
          description: Not Found
  /put/switch/{integrationId}:
    put:
      summary: Switch your access to another account
      parameters:
        - $ref: '#/parameters/access_token'
        - in: body
          name: body
          required: true
          schema: 
            $ref: '#/definitions/switch'
        - in: path
          name: integrationId
          required: true
          enum: 
            - google-sheets
          type: string
          description: mention integration_id
        - in: query
          name: key
          required: false
          type: string
          description: mention your api_key
      description: >-
         So this Api Get particular response by giving responseId 
      produces:
        - application/json
      responses:
        200:
          description: OK
        401:
          description: key is not Authorized
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Token is not recognized
        404:
          description: Credentials with ClientID, ClientSecret, redirectUrl and Token not found
          schema:
            type: object
            properties:
              Status:
                type: string
                example: Not Found Error
        500:
          description: Internal Server Error
        default:
          description: Unexpected error        
definitions: 
  googleOauthClient:
    required:
      - client_id
      - client_secret
      - redirect_uri
      - form_id
      - refresh_token
      - supportive_email
    properties:
      client_id:
        type: string
        description: >
          google client id
      client_secret:
        type: string
        description: google client secret
      redirect_uri:
        type: string
        description: google redirect uri
      form_id:
        type: string
      refresh_token:
        type: string
        description: google refresh_token
      supportive_email:
        type: string
        description: Supportive email address
  deleteResponse:
    required:
      - response_id
      - form_id
    properties:
      response_id:
        type: string
        description: >
          Your Response ID
      form_id:
        type: string
        description: >
          Your form ID
  switch:
    required:
      - switch_to
      - switch_from
      - form_id
    properties:
      switch_to:
        type: string
      switch_from:
        type: string
      form_id:
        type: string
        description: form ID
parameters: 
    access_token: &access_token
      name: access-token
      in: header
      type: string
    consumer_queue_body: &consumer_queue_body
      name: body
      in: body
      schema:
          type: object
          properties:
            queueName:
              type: string          
            formId:
              type: string